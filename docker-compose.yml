# services:
#   backend:
#     build: 
#       context: ./backend
#       dockerfile: Dockerfile
#     ports:
#       - "5000:5000"
#     volumes:
#       - ./backend:/app
#     environment:
#       - FLASK_ENV=development
#       - DATABASE_URL = postgresql://postgres:arjumand@db:5432/tasks_db
#     depends_on:
#       - db
#     networks:
#       - app-net

#   frontend:
#     build: 
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "3000:80"
#     stdin_open: true
#     tty: true
#     db:
#       image: postgres:15
#       container_name: postgres-db
#       environment:
#         - POSTGRES_DB: task_db
#         - POSTGRES_USER: postgres
#         - POSTGRES_PASSWORDS: arjumand
#       ports:
#         - "5432:5432"
#       volumns:
#         - pgdata:/var/lib/postgresql/data
#     volumes:
#         - ./frontend/:/app
#     networks:
#       - app-net
#     environment:
#       - CHOKIDAR_USEPOLLING=true
#     depends_on:
#       - backend

# networks:
#   app-net:

version: '3.8'

services:
  backend:
    build: ./backend
    container_name: flask-backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      FLASK_APP : app.py
      FLASK_ENV : development
      DATABASE_URL : postgresql://postgres:password@db:5432/tasks_db
    depends_on:
      - db

  frontend:
    build: ./frontend
    container_name: react-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app  # âœ… this is now correct
    stdin_open: true
    tty: true

  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: tasks_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
